// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/ernoaapa/eliot/pkg/api/services/containers/v1/containers.proto

package containers

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StdinStreamRequest struct {
	Input                []byte   `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StdinStreamRequest) Reset()         { *m = StdinStreamRequest{} }
func (m *StdinStreamRequest) String() string { return proto.CompactTextString(m) }
func (*StdinStreamRequest) ProtoMessage()    {}
func (*StdinStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4390d415ccc592d0, []int{0}
}

func (m *StdinStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StdinStreamRequest.Unmarshal(m, b)
}
func (m *StdinStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StdinStreamRequest.Marshal(b, m, deterministic)
}
func (m *StdinStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StdinStreamRequest.Merge(m, src)
}
func (m *StdinStreamRequest) XXX_Size() int {
	return xxx_messageInfo_StdinStreamRequest.Size(m)
}
func (m *StdinStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StdinStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StdinStreamRequest proto.InternalMessageInfo

func (m *StdinStreamRequest) GetInput() []byte {
	if m != nil {
		return m.Input
	}
	return nil
}

type StdoutStreamResponse struct {
	Output []byte `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	// Is this stderr(=true) or stdout(=false)
	Stderr               bool     `protobuf:"varint,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StdoutStreamResponse) Reset()         { *m = StdoutStreamResponse{} }
func (m *StdoutStreamResponse) String() string { return proto.CompactTextString(m) }
func (*StdoutStreamResponse) ProtoMessage()    {}
func (*StdoutStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4390d415ccc592d0, []int{1}
}

func (m *StdoutStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StdoutStreamResponse.Unmarshal(m, b)
}
func (m *StdoutStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StdoutStreamResponse.Marshal(b, m, deterministic)
}
func (m *StdoutStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StdoutStreamResponse.Merge(m, src)
}
func (m *StdoutStreamResponse) XXX_Size() int {
	return xxx_messageInfo_StdoutStreamResponse.Size(m)
}
func (m *StdoutStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StdoutStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StdoutStreamResponse proto.InternalMessageInfo

func (m *StdoutStreamResponse) GetOutput() []byte {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *StdoutStreamResponse) GetStderr() bool {
	if m != nil {
		return m.Stderr
	}
	return false
}

type SignalRequest struct {
	Namespace            string   `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	ContainerID          string   `protobuf:"bytes,2,opt,name=containerID,proto3" json:"containerID,omitempty"`
	Signal               int32    `protobuf:"varint,3,opt,name=signal,proto3" json:"signal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignalRequest) Reset()         { *m = SignalRequest{} }
func (m *SignalRequest) String() string { return proto.CompactTextString(m) }
func (*SignalRequest) ProtoMessage()    {}
func (*SignalRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4390d415ccc592d0, []int{2}
}

func (m *SignalRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignalRequest.Unmarshal(m, b)
}
func (m *SignalRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignalRequest.Marshal(b, m, deterministic)
}
func (m *SignalRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignalRequest.Merge(m, src)
}
func (m *SignalRequest) XXX_Size() int {
	return xxx_messageInfo_SignalRequest.Size(m)
}
func (m *SignalRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignalRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignalRequest proto.InternalMessageInfo

func (m *SignalRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *SignalRequest) GetContainerID() string {
	if m != nil {
		return m.ContainerID
	}
	return ""
}

func (m *SignalRequest) GetSignal() int32 {
	if m != nil {
		return m.Signal
	}
	return 0
}

type SignalResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignalResponse) Reset()         { *m = SignalResponse{} }
func (m *SignalResponse) String() string { return proto.CompactTextString(m) }
func (*SignalResponse) ProtoMessage()    {}
func (*SignalResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4390d415ccc592d0, []int{3}
}

func (m *SignalResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignalResponse.Unmarshal(m, b)
}
func (m *SignalResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignalResponse.Marshal(b, m, deterministic)
}
func (m *SignalResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignalResponse.Merge(m, src)
}
func (m *SignalResponse) XXX_Size() int {
	return xxx_messageInfo_SignalResponse.Size(m)
}
func (m *SignalResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignalResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignalResponse proto.InternalMessageInfo

type Container struct {
	Name                 string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Image                string    `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Tty                  bool      `protobuf:"varint,3,opt,name=tty,proto3" json:"tty,omitempty"`
	WorkingDir           string    `protobuf:"bytes,4,opt,name=workingDir,proto3" json:"workingDir,omitempty"`
	Args                 []string  `protobuf:"bytes,5,rep,name=args,proto3" json:"args,omitempty"`
	Env                  []string  `protobuf:"bytes,6,rep,name=env,proto3" json:"env,omitempty"`
	Mounts               []*Mount  `protobuf:"bytes,7,rep,name=mounts,proto3" json:"mounts,omitempty"`
	Pipe                 *PipeSet  `protobuf:"bytes,8,opt,name=pipe,proto3" json:"pipe,omitempty"`
	Devices              []*Device `protobuf:"bytes,9,rep,name=devices,proto3" json:"devices,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Container) Reset()         { *m = Container{} }
func (m *Container) String() string { return proto.CompactTextString(m) }
func (*Container) ProtoMessage()    {}
func (*Container) Descriptor() ([]byte, []int) {
	return fileDescriptor_4390d415ccc592d0, []int{4}
}

func (m *Container) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Container.Unmarshal(m, b)
}
func (m *Container) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Container.Marshal(b, m, deterministic)
}
func (m *Container) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Container.Merge(m, src)
}
func (m *Container) XXX_Size() int {
	return xxx_messageInfo_Container.Size(m)
}
func (m *Container) XXX_DiscardUnknown() {
	xxx_messageInfo_Container.DiscardUnknown(m)
}

var xxx_messageInfo_Container proto.InternalMessageInfo

func (m *Container) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Container) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *Container) GetTty() bool {
	if m != nil {
		return m.Tty
	}
	return false
}

func (m *Container) GetWorkingDir() string {
	if m != nil {
		return m.WorkingDir
	}
	return ""
}

func (m *Container) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *Container) GetEnv() []string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *Container) GetMounts() []*Mount {
	if m != nil {
		return m.Mounts
	}
	return nil
}

func (m *Container) GetPipe() *PipeSet {
	if m != nil {
		return m.Pipe
	}
	return nil
}

func (m *Container) GetDevices() []*Device {
	if m != nil {
		return m.Devices
	}
	return nil
}

type Device struct {
	DeviceType           string   `protobuf:"bytes,1,opt,name=deviceType,proto3" json:"deviceType,omitempty"`
	Majorid              uint32   `protobuf:"varint,2,opt,name=majorid,proto3" json:"majorid,omitempty"`
	Minorid              uint32   `protobuf:"varint,3,opt,name=minorid,proto3" json:"minorid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Device) Reset()         { *m = Device{} }
func (m *Device) String() string { return proto.CompactTextString(m) }
func (*Device) ProtoMessage()    {}
func (*Device) Descriptor() ([]byte, []int) {
	return fileDescriptor_4390d415ccc592d0, []int{5}
}

func (m *Device) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Device.Unmarshal(m, b)
}
func (m *Device) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Device.Marshal(b, m, deterministic)
}
func (m *Device) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Device.Merge(m, src)
}
func (m *Device) XXX_Size() int {
	return xxx_messageInfo_Device.Size(m)
}
func (m *Device) XXX_DiscardUnknown() {
	xxx_messageInfo_Device.DiscardUnknown(m)
}

var xxx_messageInfo_Device proto.InternalMessageInfo

func (m *Device) GetDeviceType() string {
	if m != nil {
		return m.DeviceType
	}
	return ""
}

func (m *Device) GetMajorid() uint32 {
	if m != nil {
		return m.Majorid
	}
	return 0
}

func (m *Device) GetMinorid() uint32 {
	if m != nil {
		return m.Minorid
	}
	return 0
}

type PipeSet struct {
	Stdout               *PipeFromStdout `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *PipeSet) Reset()         { *m = PipeSet{} }
func (m *PipeSet) String() string { return proto.CompactTextString(m) }
func (*PipeSet) ProtoMessage()    {}
func (*PipeSet) Descriptor() ([]byte, []int) {
	return fileDescriptor_4390d415ccc592d0, []int{6}
}

func (m *PipeSet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipeSet.Unmarshal(m, b)
}
func (m *PipeSet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipeSet.Marshal(b, m, deterministic)
}
func (m *PipeSet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipeSet.Merge(m, src)
}
func (m *PipeSet) XXX_Size() int {
	return xxx_messageInfo_PipeSet.Size(m)
}
func (m *PipeSet) XXX_DiscardUnknown() {
	xxx_messageInfo_PipeSet.DiscardUnknown(m)
}

var xxx_messageInfo_PipeSet proto.InternalMessageInfo

func (m *PipeSet) GetStdout() *PipeFromStdout {
	if m != nil {
		return m.Stdout
	}
	return nil
}

type PipeFromStdout struct {
	Stdin                *PipeToStdin `protobuf:"bytes,1,opt,name=stdin,proto3" json:"stdin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PipeFromStdout) Reset()         { *m = PipeFromStdout{} }
func (m *PipeFromStdout) String() string { return proto.CompactTextString(m) }
func (*PipeFromStdout) ProtoMessage()    {}
func (*PipeFromStdout) Descriptor() ([]byte, []int) {
	return fileDescriptor_4390d415ccc592d0, []int{7}
}

func (m *PipeFromStdout) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipeFromStdout.Unmarshal(m, b)
}
func (m *PipeFromStdout) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipeFromStdout.Marshal(b, m, deterministic)
}
func (m *PipeFromStdout) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipeFromStdout.Merge(m, src)
}
func (m *PipeFromStdout) XXX_Size() int {
	return xxx_messageInfo_PipeFromStdout.Size(m)
}
func (m *PipeFromStdout) XXX_DiscardUnknown() {
	xxx_messageInfo_PipeFromStdout.DiscardUnknown(m)
}

var xxx_messageInfo_PipeFromStdout proto.InternalMessageInfo

func (m *PipeFromStdout) GetStdin() *PipeToStdin {
	if m != nil {
		return m.Stdin
	}
	return nil
}

type PipeToStdin struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PipeToStdin) Reset()         { *m = PipeToStdin{} }
func (m *PipeToStdin) String() string { return proto.CompactTextString(m) }
func (*PipeToStdin) ProtoMessage()    {}
func (*PipeToStdin) Descriptor() ([]byte, []int) {
	return fileDescriptor_4390d415ccc592d0, []int{8}
}

func (m *PipeToStdin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PipeToStdin.Unmarshal(m, b)
}
func (m *PipeToStdin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PipeToStdin.Marshal(b, m, deterministic)
}
func (m *PipeToStdin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PipeToStdin.Merge(m, src)
}
func (m *PipeToStdin) XXX_Size() int {
	return xxx_messageInfo_PipeToStdin.Size(m)
}
func (m *PipeToStdin) XXX_DiscardUnknown() {
	xxx_messageInfo_PipeToStdin.DiscardUnknown(m)
}

var xxx_messageInfo_PipeToStdin proto.InternalMessageInfo

func (m *PipeToStdin) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type Mount struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Source               string   `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Destination          string   `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`
	Options              []string `protobuf:"bytes,4,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Mount) Reset()         { *m = Mount{} }
func (m *Mount) String() string { return proto.CompactTextString(m) }
func (*Mount) ProtoMessage()    {}
func (*Mount) Descriptor() ([]byte, []int) {
	return fileDescriptor_4390d415ccc592d0, []int{9}
}

func (m *Mount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mount.Unmarshal(m, b)
}
func (m *Mount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mount.Marshal(b, m, deterministic)
}
func (m *Mount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mount.Merge(m, src)
}
func (m *Mount) XXX_Size() int {
	return xxx_messageInfo_Mount.Size(m)
}
func (m *Mount) XXX_DiscardUnknown() {
	xxx_messageInfo_Mount.DiscardUnknown(m)
}

var xxx_messageInfo_Mount proto.InternalMessageInfo

func (m *Mount) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Mount) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Mount) GetDestination() string {
	if m != nil {
		return m.Destination
	}
	return ""
}

func (m *Mount) GetOptions() []string {
	if m != nil {
		return m.Options
	}
	return nil
}

type ContainerStatus struct {
	ContainerID          string   `protobuf:"bytes,1,opt,name=containerID,proto3" json:"containerID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Image                string   `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	State                string   `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	RestartCount         int32    `protobuf:"varint,5,opt,name=restartCount,proto3" json:"restartCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerStatus) Reset()         { *m = ContainerStatus{} }
func (m *ContainerStatus) String() string { return proto.CompactTextString(m) }
func (*ContainerStatus) ProtoMessage()    {}
func (*ContainerStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_4390d415ccc592d0, []int{10}
}

func (m *ContainerStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerStatus.Unmarshal(m, b)
}
func (m *ContainerStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerStatus.Marshal(b, m, deterministic)
}
func (m *ContainerStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerStatus.Merge(m, src)
}
func (m *ContainerStatus) XXX_Size() int {
	return xxx_messageInfo_ContainerStatus.Size(m)
}
func (m *ContainerStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerStatus proto.InternalMessageInfo

func (m *ContainerStatus) GetContainerID() string {
	if m != nil {
		return m.ContainerID
	}
	return ""
}

func (m *ContainerStatus) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ContainerStatus) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *ContainerStatus) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *ContainerStatus) GetRestartCount() int32 {
	if m != nil {
		return m.RestartCount
	}
	return 0
}

func init() {
	proto.RegisterType((*StdinStreamRequest)(nil), "eliot.services.containers.v1.StdinStreamRequest")
	proto.RegisterType((*StdoutStreamResponse)(nil), "eliot.services.containers.v1.StdoutStreamResponse")
	proto.RegisterType((*SignalRequest)(nil), "eliot.services.containers.v1.SignalRequest")
	proto.RegisterType((*SignalResponse)(nil), "eliot.services.containers.v1.SignalResponse")
	proto.RegisterType((*Container)(nil), "eliot.services.containers.v1.Container")
	proto.RegisterType((*Device)(nil), "eliot.services.containers.v1.Device")
	proto.RegisterType((*PipeSet)(nil), "eliot.services.containers.v1.PipeSet")
	proto.RegisterType((*PipeFromStdout)(nil), "eliot.services.containers.v1.PipeFromStdout")
	proto.RegisterType((*PipeToStdin)(nil), "eliot.services.containers.v1.PipeToStdin")
	proto.RegisterType((*Mount)(nil), "eliot.services.containers.v1.Mount")
	proto.RegisterType((*ContainerStatus)(nil), "eliot.services.containers.v1.ContainerStatus")
}

func init() {
	proto.RegisterFile("github.com/ernoaapa/eliot/pkg/api/services/containers/v1/containers.proto", fileDescriptor_4390d415ccc592d0)
}

var fileDescriptor_4390d415ccc592d0 = []byte{
	// 655 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0x5d, 0x6f, 0xd3, 0x3c,
	0x14, 0x56, 0xfa, 0x91, 0xae, 0xa7, 0xdb, 0xde, 0xc9, 0x9a, 0x5e, 0x45, 0xd3, 0xf4, 0x2a, 0x6f,
	0x00, 0xa9, 0xc0, 0xd4, 0x6c, 0xe5, 0x0a, 0x4d, 0x02, 0xc1, 0xba, 0x49, 0xbb, 0x40, 0x80, 0xbb,
	0x2b, 0xc4, 0x8d, 0x97, 0x5a, 0x99, 0xd9, 0x62, 0x07, 0xdb, 0x29, 0xec, 0x97, 0xf0, 0x8b, 0xf8,
	0x0d, 0xfc, 0x1d, 0xe4, 0x93, 0x64, 0xcd, 0xd8, 0xd4, 0x22, 0x2e, 0xb8, 0x3b, 0xcf, 0xe3, 0xf3,
	0xe5, 0x93, 0xe7, 0x38, 0x70, 0x9a, 0x0a, 0x7b, 0x51, 0x9c, 0x8f, 0x12, 0x95, 0xc5, 0x5c, 0x4b,
	0xc5, 0x58, 0xce, 0x62, 0x7e, 0x25, 0x94, 0x8d, 0xf3, 0xcb, 0x34, 0x66, 0xb9, 0x88, 0x0d, 0xd7,
	0x73, 0x91, 0x70, 0x13, 0x27, 0x4a, 0x5a, 0x26, 0x24, 0xd7, 0x26, 0x9e, 0x1f, 0x34, 0xd0, 0x28,
	0xd7, 0xca, 0x2a, 0xb2, 0x8b, 0x61, 0xa3, 0xda, 0x7d, 0xd4, 0x70, 0x98, 0x1f, 0x44, 0x4f, 0x80,
	0x4c, 0xed, 0x4c, 0xc8, 0xa9, 0xd5, 0x9c, 0x65, 0x94, 0x7f, 0x2e, 0xb8, 0xb1, 0x64, 0x1b, 0xba,
	0x42, 0xe6, 0x85, 0x0d, 0xbc, 0xd0, 0x1b, 0xae, 0xd3, 0x12, 0x44, 0x27, 0xb0, 0x3d, 0xb5, 0x33,
	0x55, 0xd8, 0xda, 0xd9, 0xe4, 0x4a, 0x1a, 0x4e, 0xfe, 0x05, 0x5f, 0x15, 0x76, 0xe1, 0x5e, 0x21,
	0xc7, 0x1b, 0x3b, 0xe3, 0x5a, 0x07, 0xad, 0xd0, 0x1b, 0xae, 0xd1, 0x0a, 0x45, 0x29, 0x6c, 0x4c,
	0x45, 0x2a, 0xd9, 0x55, 0x5d, 0x6e, 0x17, 0xfa, 0x92, 0x65, 0xdc, 0xe4, 0x2c, 0xe1, 0x98, 0xa3,
	0x4f, 0x17, 0x04, 0x09, 0x61, 0x70, 0xd3, 0xf3, 0xe9, 0x04, 0x73, 0xf5, 0x69, 0x93, 0xc2, 0x42,
	0x98, 0x30, 0x68, 0x87, 0xde, 0xb0, 0x4b, 0x2b, 0x14, 0x6d, 0xc1, 0x66, 0x5d, 0xa8, 0x6c, 0x35,
	0xfa, 0xde, 0x82, 0xfe, 0x51, 0x1d, 0x49, 0x08, 0x74, 0x5c, 0x99, 0xaa, 0x24, 0xda, 0x78, 0xf5,
	0x8c, 0xa5, 0xbc, 0xaa, 0x53, 0x02, 0xb2, 0x05, 0x6d, 0x6b, 0xaf, 0x31, 0xfd, 0x1a, 0x75, 0x26,
	0xf9, 0x0f, 0xe0, 0x8b, 0xd2, 0x97, 0x42, 0xa6, 0x13, 0xa1, 0x83, 0x0e, 0x3a, 0x37, 0x18, 0x97,
	0x9b, 0xe9, 0xd4, 0x04, 0xdd, 0xb0, 0xed, 0x72, 0x3b, 0xdb, 0x65, 0xe1, 0x72, 0x1e, 0xf8, 0x48,
	0x39, 0x93, 0x1c, 0x82, 0x9f, 0xa9, 0x42, 0x5a, 0x13, 0xf4, 0xc2, 0xf6, 0x70, 0x30, 0x7e, 0x30,
	0x5a, 0xf6, 0xb5, 0x46, 0x6f, 0x9c, 0x2f, 0xad, 0x42, 0xc8, 0x73, 0xe8, 0xe4, 0x22, 0xe7, 0xc1,
	0x5a, 0xe8, 0x0d, 0x07, 0xe3, 0x47, 0xcb, 0x43, 0xdf, 0x89, 0x9c, 0x4f, 0xb9, 0xa5, 0x18, 0x42,
	0x5e, 0x40, 0x6f, 0xc6, 0xd1, 0x2d, 0xe8, 0x63, 0xe1, 0x87, 0xcb, 0xa3, 0x27, 0xe8, 0x4c, 0xeb,
	0xa0, 0xe8, 0x23, 0xf8, 0x25, 0xe5, 0xe6, 0x50, 0x92, 0x67, 0xd7, 0x79, 0x3d, 0xc9, 0x06, 0x43,
	0x02, 0xe8, 0x65, 0xec, 0x93, 0xd2, 0x62, 0x86, 0x13, 0xdd, 0xa0, 0x35, 0xc4, 0x13, 0x21, 0xf1,
	0xa4, 0x5d, 0x9d, 0x94, 0x30, 0x7a, 0x0b, 0xbd, 0xaa, 0x5d, 0x32, 0x41, 0x0d, 0xa9, 0x4a, 0x5b,
	0x83, 0xf1, 0xde, 0xea, 0x5b, 0x9e, 0x68, 0x95, 0x95, 0x3a, 0xa5, 0x55, 0x6c, 0xf4, 0x1e, 0x36,
	0x6f, 0x9f, 0x90, 0x97, 0xd0, 0x35, 0x4e, 0xf7, 0x55, 0xda, 0xc7, 0xab, 0xd3, 0x9e, 0x29, 0x5c,
	0x14, 0x5a, 0xc6, 0x45, 0xff, 0xc3, 0xa0, 0xc1, 0xde, 0x27, 0xa5, 0x48, 0x41, 0x17, 0x3f, 0x98,
	0x3b, 0xb4, 0x8b, 0xe9, 0xa0, 0x8d, 0x9a, 0x55, 0x85, 0x4e, 0x6a, 0xa1, 0x55, 0xc8, 0xa9, 0x7d,
	0xc6, 0x8d, 0x15, 0x92, 0x59, 0xa1, 0x24, 0x4e, 0xa6, 0x4f, 0x9b, 0x94, 0x9b, 0x9b, 0xca, 0x9d,
	0x65, 0x82, 0x0e, 0x2a, 0xa9, 0x86, 0xd1, 0x37, 0x0f, 0xfe, 0xb9, 0x51, 0xf7, 0xd4, 0x32, 0x5b,
	0x98, 0x5f, 0xb7, 0xc7, 0xbb, 0xbb, 0x3d, 0x75, 0xeb, 0xad, 0xfb, 0xb6, 0xa0, 0xdd, 0xdc, 0x82,
	0x6d, 0x37, 0x34, 0x66, 0x79, 0x25, 0xf7, 0x12, 0x90, 0x08, 0xd6, 0x35, 0x37, 0x96, 0x69, 0x7b,
	0xe4, 0x6e, 0x1b, 0x74, 0x71, 0x07, 0x6f, 0x71, 0xe3, 0x1f, 0x2d, 0x80, 0x9b, 0xce, 0x0c, 0xd1,
	0xe0, 0xbf, 0xb2, 0x96, 0x25, 0x17, 0x64, 0x7f, 0xf9, 0xe0, 0xef, 0xbe, 0x4d, 0x3b, 0xe3, 0x95,
	0x11, 0x77, 0x5e, 0xa8, 0xa1, 0xb7, 0xef, 0x91, 0x1c, 0x3a, 0xc7, 0x5f, 0x79, 0xf2, 0x17, 0x2b,
	0x26, 0xe0, 0x97, 0xcf, 0x0f, 0x79, 0xba, 0x22, 0x43, 0xf3, 0x35, 0xdc, 0xd9, 0xfb, 0x3d, 0xe7,
	0xb2, 0xd0, 0xeb, 0xe3, 0x0f, 0x47, 0x7f, 0xfa, 0xaf, 0x38, 0x5c, 0xa0, 0x73, 0x1f, 0x7f, 0x16,
	0xcf, 0x7e, 0x06, 0x00, 0x00, 0xff, 0xff, 0x25, 0xea, 0x79, 0x78, 0x79, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ContainersClient is the client API for Containers service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContainersClient interface {
	Attach(ctx context.Context, opts ...grpc.CallOption) (Containers_AttachClient, error)
	Exec(ctx context.Context, opts ...grpc.CallOption) (Containers_ExecClient, error)
	Signal(ctx context.Context, in *SignalRequest, opts ...grpc.CallOption) (*SignalResponse, error)
}

type containersClient struct {
	cc *grpc.ClientConn
}

func NewContainersClient(cc *grpc.ClientConn) ContainersClient {
	return &containersClient{cc}
}

func (c *containersClient) Attach(ctx context.Context, opts ...grpc.CallOption) (Containers_AttachClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Containers_serviceDesc.Streams[0], "/eliot.services.containers.v1.Containers/Attach", opts...)
	if err != nil {
		return nil, err
	}
	x := &containersAttachClient{stream}
	return x, nil
}

type Containers_AttachClient interface {
	Send(*StdinStreamRequest) error
	Recv() (*StdoutStreamResponse, error)
	grpc.ClientStream
}

type containersAttachClient struct {
	grpc.ClientStream
}

func (x *containersAttachClient) Send(m *StdinStreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *containersAttachClient) Recv() (*StdoutStreamResponse, error) {
	m := new(StdoutStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *containersClient) Exec(ctx context.Context, opts ...grpc.CallOption) (Containers_ExecClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Containers_serviceDesc.Streams[1], "/eliot.services.containers.v1.Containers/Exec", opts...)
	if err != nil {
		return nil, err
	}
	x := &containersExecClient{stream}
	return x, nil
}

type Containers_ExecClient interface {
	Send(*StdinStreamRequest) error
	Recv() (*StdoutStreamResponse, error)
	grpc.ClientStream
}

type containersExecClient struct {
	grpc.ClientStream
}

func (x *containersExecClient) Send(m *StdinStreamRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *containersExecClient) Recv() (*StdoutStreamResponse, error) {
	m := new(StdoutStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *containersClient) Signal(ctx context.Context, in *SignalRequest, opts ...grpc.CallOption) (*SignalResponse, error) {
	out := new(SignalResponse)
	err := c.cc.Invoke(ctx, "/eliot.services.containers.v1.Containers/Signal", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContainersServer is the server API for Containers service.
type ContainersServer interface {
	Attach(Containers_AttachServer) error
	Exec(Containers_ExecServer) error
	Signal(context.Context, *SignalRequest) (*SignalResponse, error)
}

func RegisterContainersServer(s *grpc.Server, srv ContainersServer) {
	s.RegisterService(&_Containers_serviceDesc, srv)
}

func _Containers_Attach_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ContainersServer).Attach(&containersAttachServer{stream})
}

type Containers_AttachServer interface {
	Send(*StdoutStreamResponse) error
	Recv() (*StdinStreamRequest, error)
	grpc.ServerStream
}

type containersAttachServer struct {
	grpc.ServerStream
}

func (x *containersAttachServer) Send(m *StdoutStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *containersAttachServer) Recv() (*StdinStreamRequest, error) {
	m := new(StdinStreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Containers_Exec_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ContainersServer).Exec(&containersExecServer{stream})
}

type Containers_ExecServer interface {
	Send(*StdoutStreamResponse) error
	Recv() (*StdinStreamRequest, error)
	grpc.ServerStream
}

type containersExecServer struct {
	grpc.ServerStream
}

func (x *containersExecServer) Send(m *StdoutStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *containersExecServer) Recv() (*StdinStreamRequest, error) {
	m := new(StdinStreamRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Containers_Signal_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignalRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContainersServer).Signal(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/eliot.services.containers.v1.Containers/Signal",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContainersServer).Signal(ctx, req.(*SignalRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Containers_serviceDesc = grpc.ServiceDesc{
	ServiceName: "eliot.services.containers.v1.Containers",
	HandlerType: (*ContainersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Signal",
			Handler:    _Containers_Signal_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Attach",
			Handler:       _Containers_Attach_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "Exec",
			Handler:       _Containers_Exec_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "github.com/ernoaapa/eliot/pkg/api/services/containers/v1/containers.proto",
}
